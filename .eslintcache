[{"E:\\Portifolio\\sharry\\src\\index.js":"1","E:\\Portifolio\\sharry\\src\\App.js":"2","E:\\Portifolio\\sharry\\src\\config\\firebase.js":"3","E:\\Portifolio\\sharry\\src\\reducers\\index.js":"4","E:\\Portifolio\\sharry\\src\\components\\Landing.js":"5","E:\\Portifolio\\sharry\\src\\actions\\index.js":"6","E:\\Portifolio\\sharry\\src\\components\\PostsFeed.js":"7","E:\\Portifolio\\sharry\\src\\components\\Header.js":"8","E:\\Portifolio\\sharry\\src\\components\\PostCreator.js":"9","E:\\Portifolio\\sharry\\src\\components\\Post.js":"10","E:\\Portifolio\\sharry\\src\\components\\Comment.js":"11","E:\\Portifolio\\sharry\\src\\reducers\\progressReducer.js":"12"},{"size":834,"mtime":1606944566021,"results":"13","hashOfConfig":"14"},{"size":522,"mtime":1606959270812,"results":"15","hashOfConfig":"14"},{"size":740,"mtime":1606945634514,"results":"16","hashOfConfig":"14"},{"size":331,"mtime":1607241931514,"results":"17","hashOfConfig":"14"},{"size":926,"mtime":1607248867732,"results":"18","hashOfConfig":"14"},{"size":8162,"mtime":1607248867703,"results":"19","hashOfConfig":"14"},{"size":1012,"mtime":1607249645323,"results":"20","hashOfConfig":"14"},{"size":712,"mtime":1606962004065,"results":"21","hashOfConfig":"14"},{"size":3451,"mtime":1607250058147,"results":"22","hashOfConfig":"14"},{"size":4374,"mtime":1607249544817,"results":"23","hashOfConfig":"14"},{"size":823,"mtime":1607248867485,"results":"24","hashOfConfig":"14"},{"size":198,"mtime":1607248867668,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"ogtq46",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"28"},"E:\\Portifolio\\sharry\\src\\index.js",[],["54","55"],"E:\\Portifolio\\sharry\\src\\App.js",[],"E:\\Portifolio\\sharry\\src\\config\\firebase.js",[],"E:\\Portifolio\\sharry\\src\\reducers\\index.js",[],"E:\\Portifolio\\sharry\\src\\components\\Landing.js",["56"],"E:\\Portifolio\\sharry\\src\\actions\\index.js",["57","58","59","60"],"import {provider} from '../config/firebase';\r\n\r\nexport const loginUserWithGoogle = () => (dispatch, getState, {getFirebase}) => {\r\n    const firebase = getFirebase();\r\n    const firestore = firebase.firestore();\r\n\r\n    firebase.auth().signInWithPopup(provider).then(result => {\r\n        if(result.additionalUserInfo.isNewUser) {\r\n            firestore.collection('users').doc(result.user.uid).set({\r\n                name: result.user.displayName,\r\n                email: result.user.email,\r\n                uid: result.user.uid,\r\n                image: result.user.photoURL\r\n            })\r\n        }\r\n    }).catch(err => {\r\n        dispatch({\r\n            type: 'LOGIN_USER_ERR',\r\n            payload: err\r\n        })\r\n    })\r\n}\r\n\r\nexport const logoutUser = () => (dispatch, getState, {getFirebase}) => {\r\n    const firebase = getFirebase();\r\n\r\n    firebase.auth().signOut();\r\n}\r\n\r\n\r\nexport const submitPost = (user, text, file) => (dispatch, getState, {getFirebase}) => {\r\n    const firebase = getFirebase();\r\n    const firestore = firebase.firestore();\r\n    if(file && text) {\r\n        const storageRef = firebase.storage().ref('files');\r\n        const randomName = () => {\r\n            return Math.floor(Math.random() * (22222222222222 - 0 + 1)) + 0\r\n        }\r\n        const fileName = randomName()+file.name;\r\n        const fileRef = storageRef.child(fileName);\r\n\r\n        const getProgress = fileRef.put(file);\r\n        getProgress.then((fl) => {\r\n            const image = storageRef.child(fileName).getDownloadURL().then(url => {\r\n                firestore.collection('posts').add({\r\n                    text: text,\r\n                    image: url,\r\n                    uid: user.uid,\r\n                    likes: 0,\r\n                    dislikes: 0,\r\n                    timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n                })\r\n            })\r\n        })\r\n\r\n        getProgress.on(\r\n            firebase.storage.TaskEvent.STATE_CHANGED,\r\n            function(snapshot) {\r\n                let progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n                dispatch({\r\n                    type: 'PROGRESS_PERCENTAGE',\r\n                    payload: progress\r\n                })\r\n\r\n                switch (snapshot.state) {\r\n                    case firebase.storage.TaskState.PAUSED: // or 'paused'\r\n                        break;\r\n                    case firebase.storage.TaskState.RUNNING: // or 'running'\r\n                        break;\r\n                }\r\n            }\r\n        )\r\n    }else if(!file && text) {\r\n        firestore.collection('posts').add({\r\n            text:text,\r\n            uid: user.uid,\r\n            likes: 0,\r\n            dislikes: 0,\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n        })\r\n    }else if(file && !text){\r\n        const storageRef = firebase.storage().ref('files');\r\n        const randomName = () => {\r\n            return Math.floor(Math.random() * (22222222222222 - 0 + 1)) + 0\r\n        }\r\n        const fileName = randomName()+file.name;\r\n        const fileRef = storageRef.child(fileName);\r\n        const getProgress = fileRef.put(file);\r\n        getProgress.then((fl) => {\r\n            const image = storageRef.child(fileName).getDownloadURL().then(url => {\r\n                firestore.collection('posts').add({\r\n                    image: url,\r\n                    uid: user.uid,\r\n                    likes: 0,\r\n                    dislikes: 0,\r\n                    timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n                })\r\n            })\r\n        })\r\n\r\n        getProgress.on(\r\n            firebase.storage.TaskEvent.STATE_CHANGED,\r\n            function(snapshot) {\r\n                let progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n                dispatch({\r\n                    type: 'PROGRESS_PERCENTAGE',\r\n                    payload: progress\r\n                })\r\n\r\n                switch (snapshot.state) {\r\n                    case firebase.storage.TaskState.PAUSED: // or 'paused'\r\n                        break;\r\n                    case firebase.storage.TaskState.RUNNING: // or 'running'\r\n                        break;\r\n                }\r\n            }\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport const likePost = (post,id, user) => (dispatch, getState, {getFirebase}) => {\r\n    const firebase = getFirebase();\r\n    const firestore = firebase.firestore();\r\n    firestore.collection('users').doc(user.uid).collection('disliked').doc(id).get().then(doc => {\r\n        if(doc.exists) {\r\n            firestore.collection('users').doc(user.uid).collection('disliked').doc(id).delete().then(() => {\r\n                firestore.collection('posts').doc(id).set({\r\n                    ...post,\r\n                    dislikes: post.dislikes - 1,\r\n                    likes: post.likes + 1\r\n                })\r\n            }).then(() => {\r\n                firestore.collection('users').doc(user.uid).collection('liked').doc(id).set({\r\n                    postId: id\r\n                })\r\n            })\r\n        }else {\r\n            firestore.collection('users').doc(user.uid).collection('liked').doc(id).get().then(doc => {\r\n                if(doc.exists) {\r\n                    firestore.collection('users').doc(user.uid).collection('liked').doc(id).delete().then(() => {\r\n                        firestore.collection('posts').doc(id).set({\r\n                            ...post,\r\n                            likes: post.likes -1\r\n                        })\r\n                    })\r\n                }else {\r\n                    firestore.collection('users').doc(user.uid).collection('liked').doc(id).set({\r\n                        postId: id\r\n                    }).then(() => {\r\n                        firestore.collection('posts').doc(id).set({\r\n                            ...post,\r\n                            likes: post.likes + 1\r\n                        })\r\n                    })\r\n                }\r\n            })\r\n        }\r\n    })\r\n\r\n}\r\n\r\nexport const dislikePost = (post, id, user) => (dispatch, getState, {getFirebase}) => {\r\n    const firebase = getFirebase();\r\n    const firestore = firebase.firestore();\r\n\r\n    firestore.collection('users').doc(user.uid).collection('liked').doc(id).get().then(doc => {\r\n        if(doc.exists) {\r\n            firestore.collection('users').doc(user.uid).collection('liked').doc(id).delete().then(() => {\r\n                firestore.collection('posts').doc(id).set({\r\n                    ...post,\r\n                    likes: post.likes - 1,\r\n                    dislikes: post.dislikes + 1\r\n                })\r\n            }).then(() => {\r\n                firestore.collection('users').doc(user.uid).collection('disliked').doc(id).set({\r\n                    postId: id\r\n                })\r\n            })\r\n        }else {\r\n            firestore.collection('users').doc(user.uid).collection('disliked').doc(id).get().then(doc => {\r\n                if(doc.exists) {\r\n                    firestore.collection('users').doc(user.uid).collection('disliked').doc(id).delete().then(() => {\r\n                        firestore.collection('posts').doc(id).set({\r\n                            ...post,\r\n                            dislikes: post.dislikes -1\r\n                        })\r\n                    })\r\n                }else {\r\n                    firestore.collection('users').doc(user.uid).collection('disliked').doc(id).set({\r\n                        postId: id\r\n                    }).then(() => {\r\n                        firestore.collection('posts').doc(id).set({\r\n                            ...post,\r\n                            dislikes: post.dislikes + 1\r\n                        })\r\n                    })\r\n                }\r\n            })\r\n        }\r\n    })\r\n}\r\n\r\nexport const createComment = (user, comment, id) => (dispatch, getState, {getFirebase}) => {\r\n    const firebase = getFirebase();\r\n    const firestore = firebase.firestore();\r\n\r\n    firestore.collection('posts').doc(id).collection('comments').add({\r\n        uid: user.uid,\r\n        comment: comment,\r\n        timestamp: firebase.firestore.FieldValue.serverTimestamp()\r\n    })\r\n}","E:\\Portifolio\\sharry\\src\\components\\PostsFeed.js",[],"E:\\Portifolio\\sharry\\src\\components\\Header.js",[],"E:\\Portifolio\\sharry\\src\\components\\PostCreator.js",[],"E:\\Portifolio\\sharry\\src\\components\\Post.js",["61","62","63"],"E:\\Portifolio\\sharry\\src\\components\\Comment.js",["64"],"import React from 'react';\r\nimport './css/Comment.css';\r\nimport {Avatar} from \"@material-ui/core\";\r\nimport firebase from '../config/firebase';\r\n\r\nconst Comment = (props) => {\r\n    const [commentOwner, setCommentOwner] = React.useState('');\r\n    const db = firebase.firestore();\r\n\r\n    React.useEffect(() => {\r\n        db.collection('users').doc(props.comment.uid).onSnapshot(snapshot => {\r\n            setCommentOwner(snapshot.data())\r\n        })\r\n    }, [])\r\n\r\n    console.log(commentOwner);\r\n    return (\r\n        <div className={'comment'}>\r\n            <Avatar className={'comment__avatar'} src={commentOwner.image} />\r\n            <p className={'comment__text'}>{props.comment.comment}<span className={'comment__timestamp'}>{new Date(props.comment?.timestamp?.toDate()).toUTCString()}</span></p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Comment;","E:\\Portifolio\\sharry\\src\\reducers\\progressReducer.js",["65"],"export default function(state = 0, action) {\r\n    switch (action.type) {\r\n        case 'PROGRESS_PERCENTAGE':\r\n            return action.payload\r\n        default:\r\n            return state\r\n    }\r\n}",{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":22,"column":17,"nodeType":"72","endLine":22,"endColumn":20},{"ruleId":"73","severity":1,"message":"74","line":46,"column":19,"nodeType":"75","messageId":"76","endLine":46,"endColumn":24},{"ruleId":"77","severity":1,"message":"78","line":68,"column":17,"nodeType":"79","messageId":"80","endLine":75,"endColumn":18},{"ruleId":"73","severity":1,"message":"74","line":96,"column":19,"nodeType":"75","messageId":"76","endLine":96,"endColumn":24},{"ruleId":"77","severity":1,"message":"78","line":117,"column":17,"nodeType":"79","messageId":"80","endLine":124,"endColumn":18},{"ruleId":"81","severity":1,"message":"82","line":23,"column":8,"nodeType":"83","endLine":23,"endColumn":10,"suggestions":"84"},{"ruleId":"81","severity":1,"message":"85","line":29,"column":8,"nodeType":"83","endLine":29,"endColumn":10,"suggestions":"86"},{"ruleId":"81","severity":1,"message":"87","line":47,"column":8,"nodeType":"83","endLine":47,"endColumn":21,"suggestions":"88"},{"ruleId":"81","severity":1,"message":"89","line":14,"column":8,"nodeType":"83","endLine":14,"endColumn":10,"suggestions":"90"},{"ruleId":"91","severity":1,"message":"92","line":1,"column":1,"nodeType":"93","endLine":9,"endColumn":2},"no-native-reassign",["94"],"no-negated-in-lhs",["95"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'image' is assigned a value but never used.","Identifier","unusedVar","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'db' and 'props.post.data.uid'. Either include them or remove the dependency array.","ArrayExpression",["96"],"React Hook React.useEffect has missing dependencies: 'db' and 'props.post.id'. Either include them or remove the dependency array.",["97"],"React Hook React.useEffect has missing dependencies: 'db', 'props.post.id', and 'props.user.uid'. Either include them or remove the dependency array.",["98"],"React Hook React.useEffect has missing dependencies: 'db' and 'props.comment.uid'. Either include them or remove the dependency array.",["99"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"100","fix":"101"},{"desc":"102","fix":"103"},{"desc":"104","fix":"105"},{"desc":"106","fix":"107"},"Update the dependencies array to be: [db, props.post.data.uid]",{"range":"108","text":"109"},"Update the dependencies array to be: [db, props.post.id]",{"range":"110","text":"111"},"Update the dependencies array to be: [currentUser, db, props.post.id, props.user.uid]",{"range":"112","text":"113"},"Update the dependencies array to be: [db, props.comment.uid]",{"range":"114","text":"115"},[923,925],"[db, props.post.data.uid]",[1168,1170],"[db, props.post.id]",[1730,1743],"[currentUser, db, props.post.id, props.user.uid]",[455,457],"[db, props.comment.uid]"]